<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
 
 <title></title>
 <link href="http://www.panxw.com/atom.xml" rel="self"/>
 <link href="http://www.panxw.com"/>
 <updated>2017-03-27T03:16:35-07:00</updated>
 <author>
   <name>潘学文</name>
   <email>winfirm#163.com</email>
 </author>

 
 <entry>
   <title>spark-analysis-text-to-hive</title>
   <link href="http://www.panxw.com/posts/spark-analysis-text-to-hive.html"/>
   <updated>2017-03-27T00:00:00-07:00</updated>
   <id>/posts/spark-analysis-text-to-hive</id>
   <content type="html">&lt;h3 id=&quot;需求&quot;&gt;需求&lt;/h3&gt;
&lt;h2 id=&quot;分隔文件中的电话号码字段然后将一行拆为多行的代码实现&quot;&gt;分隔文件中的电话号码字段,然后将一行拆为多行的代码实现&lt;/h2&gt;
&lt;h2 id=&quot;源文件&quot;&gt;源文件&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;170220003CD|200.0000|2617349500 2617349502~2617349507|2017/02/28 18:55:02|100.0000|80119|百联商业经营公司(百联内部使用－发卡主体)|商品|0023769|全渠道线上销售
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&quot;目标结果&quot;&gt;目标结果&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;170220003CD|200.0000|2617349500|2017/02/28 18:55:02|100.0000|80119|百联商业经营公司(百联内部使用－发卡主体)|商品|0023769|全渠道线上销售
170220003CD|200.0000|2617349502|2017/02/28 18:55:02|100.0000|80119|百联商业经营公司(百联内部使用－发卡主体)|商品|0023769|全渠道线上销售
170220003CD|200.0000|2617349503|2017/02/28 18:55:02|100.0000|80119|百联商业经营公司(百联内部使用－发卡主体)|商品|0023769|全渠道线上销售
170220003CD|200.0000|2617349504|2017/02/28 18:55:02|100.0000|80119|百联商业经营公司(百联内部使用－发卡主体)|商品|0023769|全渠道线上销售
170220003CD|200.0000|2617349505|2017/02/28 18:55:02|100.0000|80119|百联商业经营公司(百联内部使用－发卡主体)|商品|0023769|全渠道线上销售
170220003CD|200.0000|2617349506|2017/02/28 18:55:02|100.0000|80119|百联商业经营公司(百联内部使用－发卡主体)|商品|0023769|全渠道线上销售
170220003CD|200.0000|2617349507|2017/02/28 18:55:02|100.0000|80119|百联商业经营公司(百联内部使用－发卡主体)|商品|0023769|全渠道线上销售
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;spark-代码为&quot;&gt;spark 代码为&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;val file = sc.textFile(&quot;/tmp/demo2.txt&quot;)
file.map { line =&amp;gt;
val array = line.split(&quot;\\|&quot;)
val tels = array(2)
val telss=tels.split(&quot; &quot;)
println(&quot;hello -------------------------------------&quot;)
val content = line.replace(tels, &quot;dianhuahaoma&quot;)
for (j &amp;lt;- telss) yield {
if (j.contains(&quot;~&quot;)) {
val start = BigInt(j.split(&quot;~&quot;)(0))
val end = BigInt(j.split(&quot;~&quot;)(1))
for (k &amp;lt;- start to end) yield {
(k, content)
}
} else {
Vector((telss(0), content))
}
}
}.flatMap(s=&amp;gt;s).flatMap(s=&amp;gt;s).map(s=&amp;gt;s._2.replace(&quot;dianhuahaoma&quot;,&quot;&quot;+s._1).replace(&quot;|&quot;,&quot;\t&quot;)).saveAsTextFile(&quot;/tmp/abc28&quot;)
&lt;/code&gt;&lt;/pre&gt;
</content>
 </entry>
 
 
</feed>